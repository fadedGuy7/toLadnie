{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInOpt.js","components/layout/SignedOutOpt.js","components/layout/NavBar.js","components/meme/LikeBarMeme.js","components/meme/Meme.js","store/actions/memeActions.js","components/meme/MemeList.js","components/dashboard/Ad.js","components/dashboard/Dashboard.js","components/meme/AddComment.js","store/actions/commentActions.js","components/meme/Comment.js","components/meme/CommentsList.js","components/meme/Comments.js","components/meme/MemeDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/sideComponents/form/Form.js","components/meme/CreateMeme.js","components/Test.js","App.js","store/reducers/authReducer.js","store/reducers/memeReducer.js","store/reducers/commentReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","connect","state","firebase","signOut","props","className","to","onClick","profile","initials","SignedOutOpt","links","uid","liked","disliked","data","firestore","likes","meme","id","dislikes","console","log","some","val","Fragment","likeMeme","length","dislikeMeme","Meme","this","redirect","key","title","array","result","forEach","el","tag","showUp","hashTag","src","alt","Component","getFirestore","authId","votes","collection","doc","update","FieldValue","arrayRemove","arrayUnion","MemeList","memes","map","Ad","Dashboard","compose","ordered","firestoreConnect","orderBy","AddComment","comment","memeId","toComment","handleChange","e","setState","target","value","handleSubmit","preventDefault","addComment","_mkVis","onSubmit","onChange","placeholder","React","add","commentAuthorUid","commentAuthorFirstName","firstName","commentAuthorLastName","lastName","commentDate","Date","Comment","commentTo","comments","filter","moment","unix","seconds","startOf","fromNow","visible","CommentsList","Comments","useState","vis","setVis","MemeDetails","undefined","match","params","subcollections","storeAs","SignIn","authError","htmlFor","creds","SignUp","passwordRe","signUp","isValid","disabled","newUser","createUserWithEmailAndPassword","resp","user","set","Select","selectContainer","document","getElementsByClassName","i","selectedElem","getElementsByTagName","selected","createElement","innerHTML","options","selectedIndex","appendChild","optionsList","j","option","text","addEventListener","event","select","parentNode","previousSibling","clicked","k","removeAttribute","click","stopPropagation","closeAllSelect","nextSibling","classList","toggle","elmnt","arrNo","selectItems","selectSelected","push","remove","indexOf","children","InputText","label","required","InputFile","W3CDOM","fakeFileUpload","left","right","textField","button","x","clone","cloneNode","relatedElement","onchange","onmouseout","onclick","initFileUploads","ref","CreateMeme","memeStatus","storageRef","storage","memeRef","child","file","files","put","snapshot","getDownloadURL","url","handleChip","chips","M","Chips","getInstance","$","chipsData","createMeme","history","close","closeIcon","secondaryPlaceholder","limit","onChipAdd","onChipDelete","setRef","s","active","color","flashing","size","authorFirstName","authorLastName","authorId","postDate","Test","values","0","1","App","exact","path","component","initState","authReducer","action","message","memeReducer","isLoading","commentReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","useSelector","isLoaded","getElementById"],"mappings":"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","file":"static/js/main.302c3466.chunk.js","sourcesContent":["const signIn = ( credentials ) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error });\n        })\n    }\n}\nconst signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ \n                type: 'SIGNOUT_SUCCESS'\n            });\n        })\n    }\n}\nconst signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                liked: [],\n                disliked: []\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(error => {\n            dispatch({ \n                type: 'SIGNUP_ERROR',\n                error: error\n            })\n        })\n    }\n}\n\n\nexport default signIn;\nexport { signOut, signUp };","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInOpt = (props) => {\n    return(\n        <ul className='right hide-on-med-and-down'>\n            <li>\n                <NavLink to='/dodaj' className='dBrownText'>Dodaj material</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='dBrownText' onClick={props.signOut}>Wyloguj</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='btn btn-floating green lighten-1'>{props.profile.initials}</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInOpt);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutOpt = () => {\n    return(\n        <ul className='right'>\n            <li>\n                <NavLink className='dBrownText' to='/rejestracja'>SignUp</NavLink>\n            </li>\n            <li>\n                <NavLink className='dBrownText' to='/zaloguj'>Login</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default SignedOutOpt;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInOpt from './SignedInOpt';\nimport SignedOutOpt from './SignedOutOpt';\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n    const { auth, profile } = props; // takes states !!$\n    const links = auth.uid ? <SignedInOpt profile={profile} /> : <SignedOutOpt />\n    return(\n        <nav className='nav-wrapper blueGrey'>\n            <div className='container'>\n                    <Link to='/' className='brand-logo text'>to*Ladnie</Link>\n                \n                { links }\n\n            </div>\n        </nav>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,  //!!$\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst LikeBarMeme = (props) =>{\n        const { liked, disliked, data } = props;\n        let likes = data.meme[props.id].likes;\n        let dislikes = data.meme[props.id].dislikes;\n        console.log('LikeBarMeme render')\n        return(\n            <div className='likeButtonsContainer'>\n                {(likes && liked && liked.some(val => val === props.id)) || (likes && disliked && disliked.some(val => val === props.id)) ? ( \n                    liked.some(val => val === props.id) ? (\n                        <React.Fragment>\n                            <div className='likeButtons liked' onClick={() => props.likeMeme(props.id)}>\n                                {likes.length}\n                            </div>                                               \n                            <div className='likeButtons likedDislike'>\n                                {dislikes.length}\n                            </div>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <div className='likeButtons dislikedLike'>\n                                {likes.length}\n                            </div>\n                            <div className='likeButtons disliked' onClick={() => props.dislikeMeme(props.id)}>\n                                {dislikes.length}\n                            </div>\n                        </React.Fragment>\n                    )\n                ) : (\n                    <>\n                    <div className='likeButtons like text' onClick={() => props.likeMeme(props.id)}>+</div>\n                    <div className='likeButtons dislike text' onClick={() => props.dislikeMeme(props.id)}>-</div>\n                    </>\n                )}\n\n            </div>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        liked: state.firebase.profile.liked,\n        disliked: state.firebase.profile.disliked,\n        data: state.firestore.data\n    }\n}\n\nexport default connect(mapStateToProps)(LikeBarMeme)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { likeMeme, dislikeMeme } from '../../store/actions/memeActions'\nimport { Link } from 'react-router-dom'\nimport LikeBarMeme from './LikeBarMeme'\n\nconst showUp = ( array ) => {\n    let result = '';\n    array && array.forEach((el) => {\n        result += '#' + el.tag + ' '\n        return result\n    })\n    return result;\n}\n\nclass Meme extends Component {\n    render() {\n        console.log('RENDER MEME');\n        return(\n            <div className='meme blueGrey text m8 s12 z-depth-1'>\n                <div className='transparent text memeTitle'>\n                    {this.props.redirect ? (\n                        <Link to={'/meme/' + this.props.meme.id} key={'linktitle' + this.props.meme.id}>\n                            {this.props.meme.title}\n                        </Link>\n                    ) : (\n                        <React.Fragment>\n                            {this.props.meme.title}\n                        </React.Fragment>\n                    )}\n                </div>\n                <div className='toSides blueGrey dBrownText darken-1 memeInfo'>\n                    <p className='info'>{this.props.meme.type}</p>\n                    <p className='info'>{showUp(this.props.meme.hashTag)}</p>\n                </div>\n                <div className='memeContent'>\n                    {this.props.redirect ? (\n                        <Link to={'/meme/' + this.props.id} key={'link' + this.props.id}>\n                            <img src={this.props.meme.meme} alt={this.props.meme.title} className='responsive-img z-depth-0 memeImg' />\n                        </Link>\n                    ) : (\n                        <React.Fragment>\n                            <img src={this.props.meme.meme} alt={this.props.meme.title} className='responsive-img z-depth-0 memeImg' />\n                        </React.Fragment>\n                    )}\n                </div> \n                 <div className='transparent underMeme'>\n                    <LikeBarMeme id={this.props.id} likeMeme={this.props.likeMeme} dislikeMeme={this.props.dislikeMeme} />\n                 </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        likeMeme: (id) => dispatch(likeMeme(id)),\n        dislikeMeme: (id) => dispatch(dislikeMeme(id))\n    }\n}\n\nconst mapStateToProps = (state, props) => {  \n    return {\n        id: props.meme.id\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meme);\n\n\n","export const createMeme = (meme) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;  // get info about author from state\n        const authId = getState().firebase.auth.uid;    // and his id\n        firestore.collection('meme').add({\n            ...meme,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authId,\n            postDate: new Date(),\n            likes: [],\n            dislikes: []\n        }).then((result) => {\n                dispatch({ type: 'CREATE_MEME', meme})\n        }).catch((error) => {\n            dispatch({ type: 'CREATE_MEME_ERROR', error})\n        })\n    }\n}\n\nconst likeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.meme[id];\n        console.log(votes)\n\n        if(votes.likes.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).update({\n                likes : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayRemove(id)\n                }).then(() => {\n                    dispatch({ type: 'UNLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNLIKE_ERROR', error})\n            })\n        } else {\n            firestore.collection('meme').doc(id).update({\n                likes : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'LIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'LIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'LIKE_ERROR', error})\n            })\n        } \n    } \n}\nconst dislikeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.meme[id];\n\n        if(votes.dislikes.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).update({\n                dislikes : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayRemove(id) \n                }).then(() => {\n                    dispatch({ type: 'UNDISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNDISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNDISLIKE_ERROR', error})\n            })\n        } else {       \n            firestore.collection('meme').doc(id).update({\n                dislikes : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'DISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'DISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'DISLIKE_ERROR', error})\n            })\n        } \n    } \n}\n\nexport { likeMeme, dislikeMeme }","import React from 'react';\nimport Meme from './Meme';\n\nconst MemeList = ({ memes }) => {\n    return (\n        <div className='memeList'>\n            { memes && memes.map(meme => {\n                return (\n                        <Meme key={meme.id} meme={meme} redirect={true}/>\n                )\n            }) }\n        </div>\n    );\n}\n\nexport default MemeList;","import React from 'react';\n\nconst Ad = () => {\n    return (\n    <div className='card z-depth-1 blueGrey'>\n        <span className='text adTitle'>Reklama</span>\n    </div>\n    );\n}\nexport default Ad;","import React, { Component } from 'react';\nimport MemeList from '../meme/MemeList';\nimport Ad from './Ad';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n    render() {\n    console.log('dashboard render');\n         \n         const { memes, auth } = this.props;  \n         if (!auth.uid) return <Redirect to='/zaloguj' />\n\n         return(\n             <div className='container dashboard'>\n                 <div className='row'>\n                    <div className='col s12 m8'>\n                        <MemeList memes={memes}/>  {/* aby przekazac ja tutaj @@ */}\n                    </div>\n                    <div className='col m4'>\n                        <Ad />\n                    </div>\n                 </div>\n             </div>\n         );\n     }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        memes: state.firestore.ordered.meme,       // (3) managing data what we sinked !!#\n        auth: state.firebase.auth                   // there we have got info about user authentication is it on or off\n    }       \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([ {\n        collection: 'meme' , orderBy: ['postDate', 'desc']// (1) sink from !!#\n    },\n    {\n        collection: 'meme'// (1) sink from !!#\n    } ])\n)(Dashboard); \n ","import React from 'react'\nimport { TextInput } from 'react-materialize'\nimport { addComment } from '../../store/actions/commentActions'\nimport { connect } from 'react-redux'\n\n\nexport class AddComment extends React.Component {\n    state = {\n        comment: '',\n        memeId: this.props.id,\n        toComment: this.props.toComment\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addComment(this.state);\n        this.setState({\n            comment: ''\n        })\n        this.props._mkVis('');\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit} className='commentForm s12 m12'>\n                <TextInput onChange={this.handleChange} placeholder='HAHA Kurła dobre..' \n                           value={this.state.comment} id='comment' className='nBlueText'/>\n                <button className='btn dBrown z-depth-1'>Dodaj komentarz</button>\n            </form>\n        ); \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addComment: (comment) => dispatch(addComment(comment))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddComment);","export const addComment = ( comment ) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile; // get info about user\n        const authId = getState().firebase.auth.uid; // and his id\n        console.log('add comment : ', comment);\n\n        firestore.collection('meme').doc(comment.memeId).collection('comments').add({\n            ...comment,\n            commentAuthorUid: authId,\n            commentAuthorFirstName: profile.firstName,\n            commentAuthorLastName: profile.lastName,\n            commentDate: new Date(),\n            likes: [],\n            dislikes: []\n        }).then(() => {\n            dispatch({ type: 'COMMENT_ADDED', comment})\n        }).catch((error) => {\n            dispatch({ type: 'COMMENT_ERROR', error})\n        })\n    }\n}\n\n\nexport const contactsFetched = (contacts) => ({\n    type: 'FETCH_CONTACTS_SUCCESS',\n    contacts\n  });\n  ","import React from 'react'\nimport moment from 'moment';\nimport AddComment from './AddComment';\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() {\n        let commentTo = this.props.comments ? this.props.comments.filter(val => val.toComment === this.props.comment.id) : null;\n        return(\n            <div className='blueGrey comments z-depth-1'>\n                <div className='toSides commentTitle'>\n                    <span className=''>{this.props.comment.commentAuthorFirstName}</span>\n                    <span className='time'>{moment.unix(this.props.comment.commentDate.seconds)\n                                                  .startOf('minute').fromNow()}</span>\n                </div>\n                <div className='toSides'> \n                    <div className='blueGrey comment'>\n                        <span>{this.props.comment.comment}</span>\n                    </div>\n                    <div className='commentExtras'>\n                        { /* <p onClick={() => { this.setState({ visible: !this.state.visible })}}>Odpowiedz</p> */ }\n                        <p onClick={() => { this.props._mkVis(this.props.comment.id) }}>Odpowiedz</p>\n                    </div>\n                </div>\n                {/*console.log('porwonanieeee ', this.props.visible, this.props.comment.id, this.props.visible === this.props.comment.id) */}\n                <div className={this.props.visible === this.props.comment.id ? 'visible' : 'invisible'}>\n                    <AddComment id={this.props.comment.memeId} toComment={this.props.comment.id} _mkVis={this.props._mkVis} />\n\n                </div>\n                \n                {commentTo && commentTo.length > 0 ?        // check if there is comment to comment, if so display it\n                    (\n                    commentTo.map((comment) => { \n                            return <Comment key={comment.id} comment={comment} comments={this.props.comments} visible={this.props.visible} _mkVis={this.props._mkVis}/> \n                    }))\n                : null }                \n            </div>\n        );\n    }\n}\n    \n\nexport default Comment;\n","import React from 'react'\nimport Comment from './Comment'\n\nconst CommentsList = ({ _mkVis, visible, comments }) => {\n\n    console.log('CommentsList render', comments, visible);\n\n    if(comments && comments.length > 0) {\n        return(\n            comments.filter(comment => comment.toComment === null).map(comment => {\n                return (\n                    <Comment key={comment.id} comment={comment} comments={comments} visible={visible} _mkVis={_mkVis}/>\n                );\n            })\n        ); \n    } else {\n        return (\n            <div className='noComments'>\n                Brak Komentarzy, bądź pierwszym który dorzuci swoje trzy grosze!\n            </div>\n        );\n    }\n} \n\nexport default CommentsList;\n","import React, { useState } from 'react'\nimport AddComment from './AddComment'\nimport CommentsList from './CommentsList'\n\nconst Comments = (props) => {\n    const [vis, setVis] = useState('');\n    const _mkVis = ( id ) => {\n        vis === id ? setVis('') : setVis(id);\n        console.log('setVis, vis = ', vis, id)\n    }\n    return(\n        <div className='commentsContainer blueGrey darken-1 text z-depth-1'>\n                <div className='commentTitle blueGrey'>Komentarze dla meme</div>\n                <div className='blueGrey darken-1 m8 s12'>\n                    <CommentsList comments={props.comments} visible={vis} _mkVis={_mkVis} />\n                    <AddComment id={props.id} toComment={null} visible={vis} _mkVis={_mkVis} />\n                </div>\n        </div>\n    );\n}\n\nexport default Comments ","import React from 'react';\nimport Meme from './Meme';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nimport Comments from './Comments'\n\n\nclass MemeDetails extends React.Component {\n    //shouldComponentUpdate(nextProps, nextState) {\n        //return this.props.meme && this.props.comment ? false : true;\n    //}\n    render() {\n\n    const { meme, auth, comments } = this.props;\n\n    if (!auth.uid) return <Redirect to='/' />           // if not logged in redirect to login page\n\n    if (meme && comments !== undefined) {\n        return(\n        <div className='container section'>\n            <Meme meme={meme[0]} likes={meme[0].likes} dislikes={meme[0].dislikes} redirect={false}/> \n            <Comments id={meme[0].id} comments={comments} />\n        </div>\n        );\n    } else {\n        return (<p>Ladowanie mema</p>);\n    }\n}\n}\n\nconst mapStateToProps = (state, props) => {\n        const id = props.match.params.id;\n        const ordered = state.firestore.ordered;\n        const meme = ordered.meme ? ordered.meme.filter(val => val.id === id) : null;\n        const comments = ordered.comments ? ordered.comments : null;\n        return {\n            id: id,\n            meme: meme,\n            auth: state.firebase.auth,\n            comments: comments,\n         //   votes: state.firestore.data.votes\n    }\n}\n\nexport default compose(\n    firestoreConnect((props) => [\n        { collection: 'meme', orderBy: ['postDate', 'desc']},\n        { collection: 'meme', doc: props.match.params.id, subcollections: [{ collection: 'comments' }], storeAs: 'comments', orderBy: 'commentDate' },\n        //{ collection: 'meme', doc: props.match.params.id, subcollections: [{ collection: 'votes' }], storeAs: 'votes'},\n    ]), connect(mapStateToProps)\n)(MemeDetails); \n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport signIn from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;  // check if is there error\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='blueGrey text'>\n                    <h5 className='green-text darken-2'>Zaloguj się</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} className='nBlueText'/>  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange}  className='nBlueText'/>\n                    </div>\n                    <button className='btn pink lighten-3 z-depth-1'>Zaloguj</button>\n                    <div className='red-text center'>\n                        { authError ? <p>Zly login i/lub haslo!</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nexport class SignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        passwordRe: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const {\n            firstName,\n            lastName,\n            email,\n            password,\n            passwordRe, } = this.state;\n\n        const isValid = firstName === '' || lastName === '' || email === '' || password !== passwordRe;\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='green-text darken-2'>Rejestracja</h5>\n                    <div className='input-field'>\n                        <label htmlFor='firstName'>Imie</label>\n                        <input type='text' id='firstName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastName'>Nazwisko</label>\n                        <input type='text' id='lastName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='passwordRe'>Powtorz haslo</label>\n                    <input type='password' id='passwordRe' onChange={this.handleChange} />\n                    </div>\n                    <button disabled={isValid} className='btn pink lighten-3 z-depth-1'>Zarejestruj</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError       //on auth reducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react'\nimport { fireEvent } from '@testing-library/dom'\n\n  ///////////////////////////////////////////////////////\n ///                 SELECT BOX                      ///\n///////////////////////////////////////////////////////\n\n\nclass Select extends React.Component {\n    \n    componentDidMount() {\n//###        const handChange = (val) => {\n  //          this.props.handleChange(val);\n    //    }\n        let selectContainer = document.getElementsByClassName('selectContainer');\n        for (let i = 0; i < selectContainer.length; i++) {\n            let selectedElem = selectContainer[i].getElementsByTagName('select')[0];\n            // create div that will act as selected item\n            let selected = document.createElement('div');\n            selected.className = 'selectSelected';\n            selected.innerHTML = selectedElem.options[selectedElem.selectedIndex].innerHTML;  // display choosen val in new created div\n            selectContainer[i].appendChild(selected);\n            // create div that act as options list\n            let optionsList = document.createElement('div');\n            optionsList.className = 'selectItems selectInvisible';\n            // and each position\n            for (let j = 0; j < selectedElem.length; j++) {\n                let option = document.createElement('div');\n                option.innerHTML = selectedElem[j].text;\n                option.addEventListener('click', function(event) {\n                    let select = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n                    select.onChange = ( event ) => console.log('klikniete', event)\n                    let selected = this.parentNode.previousSibling;  // get sibling div ( what act as selected )\n                    for (let i = 0; i < select.length; i++) {\n                    if (select.options[i].innerHTML === this.innerHTML) {\n                        select.selectedIndex = i;       // setup .selectedIndex value for future use\n                        //### handChange(select[i].value);\n                        console.log(select)\n\n\n                        selected.innerHTML = this.innerHTML;\n                        let clicked = this.parentNode.getElementsByClassName(\"darken\"); \n\n                        for (let k = 0; k < clicked.length; k++) {      // clear style for previously choosen position on the list..\n                            clicked[k].removeAttribute(\"class\");\n                        }\n                        this.className = \"darken\";  // .. and set it for new one\n                        break;\n                    }\n                    }\n                    selected.click();\n                });\n                optionsList.appendChild(option);\n            }\n            selectContainer[i].appendChild(optionsList);\n            selected.addEventListener(\"click\", function(event) { // when click on select box close the other ones currently open, open/close current one\n                event.stopPropagation();\n                closeAllSelect(this);\n                this.nextSibling.classList.toggle(\"selectInvisible\");\n                this.classList.toggle(\"selectArrowDown\");\n              });\n        }\n            function closeAllSelect(elmnt) {        // function that close all other select boxes\n                let arrNo = [];\n                let selectItems = document.getElementsByClassName(\"selectItems\");\n                let selectSelected = document.getElementsByClassName(\"selectSelected\");\n                for (let i = 0; i < selectSelected.length; i++) {\n                if (elmnt === selectSelected[i]) {\n                    arrNo.push(i)\n                } else {\n                    selectSelected[i].classList.remove(\"select-arrow-active\");\n                }\n                }\n                for (let i = 0; i < selectItems.length; i++) {\n                if (arrNo.indexOf(i)) {\n                    selectItems[i].classList.add(\"selectInvisible\");\n                }\n                }\n            }\n\n        document.addEventListener(\"click\", closeAllSelect);     // close select box if clicked somewhere out of the box\n    }\n    render() {\n        \n        return (\n            <div className='selectContainer'>\n                <select value={this.props.value} onChange={(e) => console.log('onChange', e)}>\n                    { this.props.children ? this.props.children : <option value='default'>Default position</option> }\n                </select>\n            </div>\n          );\n    }\n}\n\n  ///////////////////////////////////////////////////////\n ///                 INPUT TEXT                      ///\n///////////////////////////////////////////////////////\n\nconst InputText = (props) => {\n    const {label, id, value} = props;\n    return(\n        <div className=\"inputArea\">      \n            <input type=\"text\" className='browser-default dBrownText' onChange={props.onChange} id={id} value={value} required/>\n            <span className=\"bar\"></span>\n            <label>{label}</label>\n        </div>\n    )\n}\n\n\n  ///////////////////////////////////////////////////////\n ///                 INPUT FILE                      ///\n///////////////////////////////////////////////////////\n\n\nclass InputFile extends React.Component {\n    componentDidMount() {\n        var W3CDOM = (document.createElement && document.getElementsByTagName);  // check if browser support W3C DOM\n        let label = this.props.label;\n        function initFileUploads() {\n            if (!W3CDOM) return;\n            var fakeFileUpload = document.createElement('div');\n            fakeFileUpload.className = 'fakeFile';\n            let left = document.createElement('div');\n            left.className = 'fileLeft';\n            let right = document.createElement('div');\n            right.className = 'fileRight';\n\n            fakeFileUpload.appendChild(left);\n            fakeFileUpload.appendChild(right);\n\n            let textField = document.createElement('input');\n            textField.type = 'text';\n            textField.className = 'browser-default dBrownText fileInput';\n            right.appendChild(textField);\n\n            var button = document.createElement('div');\n            button.className = 'fileButton';\n            button.innerHTML = label;\n            left.appendChild(button);\n            \n            var x = document.getElementsByTagName('input');\n            for (var i=0;i<x.length;i++) {\n                if (x[i].type !== 'file') continue;\n                if (x[i].parentNode.className !== 'inputFile') continue;\n                x[i].className = 'file';\n                var clone = fakeFileUpload.cloneNode(true);\n                x[i].parentNode.appendChild(clone);\n                x[i].relatedElement = clone.getElementsByTagName('input')[0];\n                x[i].onchange = x[i].onmouseout = function () {\n                    this.relatedElement.value = this.value;\n                }\n                fakeFileUpload.onclick = function () {\n                    x[i].click()\n                }\n            }\n        }\n       initFileUploads(); \n    }\n    render() {\n\n        return(\n            <div className=\"inputFile\">\n\t            <input type=\"file\" onChange={this.props.onChange} id={this.props.id} value={this.props.value} className=\"file\" ref={this.props.ref}/>\n            </div> \n        )\n    }\n}\n\n\nexport { Select, InputText, InputFile };","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createMeme } from '../../store/actions/memeActions';\nimport { Redirect } from 'react-router-dom'\nimport M from 'materialize-css';\nimport { Chip, TextInput, Icon, Col, Preloader } from 'react-materialize'\nimport '../../index.css';\nimport $ from 'jquery'\nimport { getFirebase } from 'react-redux-firebase';\nimport { Select, InputText, InputFile } from '../sideComponents/form/Form'\n\nimport 'firebase/storage';\n\nexport class CreateMeme extends Component {\n    state = {\n        title: '',\n        meme: '',\n        type: '',\n        hashTag: [],\n        memeStatus: 0\n    }\n\n    handleChange = (e) => {\n        console.log('tyrtrtrtr', e);\n        if(e.target.type === 'file') {\n            let firebase = getFirebase();\n            const storageRef = firebase.storage().ref();\n            const meme = e.target.value;\n            const memeRef = storageRef.child(meme);\n            const file = e.target.files[0];\n            this.setState({\n                memeStatus: 1\n            }, () => {\n                memeRef.put(file).then((snapshot) => {\n                    memeRef.getDownloadURL().then((url) => {\n                        this.setState({\n                            meme: url,\n                            memeStatus: 2\n                        })\n                    })\n                }).catch((error) => {\n                    this.setState({ memeStatus: 3 });\n                });\n\n            });\n        } else {\n            this.setState({\n                [e.target.id]: e.target.value\n            }, () => {\n                console.log(this.state);\n            })\n        }\n    }\n\n    handleChip = (e) => {\n        let chips = M.Chips.getInstance($('.chips')).chipsData;  //getting data from chip elemenet           \n        this.setState({\n            hashTag: chips\n        })\n    } \n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createMeme(this.state);\n         this.props.history.push('/');  //redirect user to '/' page   \n    }\n    \n\n    \n   render() {\n\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/zaloguj' />\n\n        const LoadingStatus = () => {\n            if(this.state.memeStatus === 1) {\n                           return <Col s={4}>\n                           <Preloader\n                             active\n                             color=\"blue\"\n                             flashing={false}\n                             size=\"small\"\n                           />\n                         </Col>   \n            } else if(this.state.memeStatus === 2) {\n                return <p className='green-text'>Grafika zaladowana!</p>\n            } else if(this.state.memeStatus === 3) {\n                return <p className='red-text'>Grafika nie została załadowana, spróbuj ponownie.</p>\n            }\n            return false\n        }\n\n        \n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='blueGrey'>\n                    <InputText id='title' label='Tytuł wrzutki' onChange={this.handleChange} value={this.state.title} />\n                    <Select handleChange={this.handleChange} value={this.state.type} id='type' >\n                        <option value=''>Typ wrzutki</option>\n                        <option value='humor'>Humor</option>\n                        <option value='ciekawostka'>Ciekawostka</option>\n                        <option value='historyczne'>Historyczne</option>\n                    </Select>\n\n                    <div className='input-field'>\n                    <Chip\n                        close={false}\n                        closeIcon={<Icon className=\"close\">close</Icon>}\n                        id='hashTag'\n                        options={{\n                            placeholder: 'Tag > enter',\n                            secondaryPlaceholder: '(max. 8)',\n                            limit: 8,\n                            onChipAdd: this.handleChip,\n                            onChipDelete: this.handleChip,\n                            data: this.state.hashTag\n                        }} \n                        className='nBlueText'/>\n                    </div>\n                    \n                    <div className='input-field'>\n                        {/*<TextInput type='file' label='Zapodaj mema' id='meme' onChange={this.handleChange} ref={this.setRef} />*/}\n                        <InputFile label='Zapodaj mema' id='meme' onChange={this.handleChange} ref={this.setRef}/>\n\n                        <LoadingStatus />\n                    </div>\n                    <button className='customButton'>Dodaj</button>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth   //comment in dashboard.js\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMeme: (meme) => dispatch(createMeme(meme))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMeme);","import React from 'react'\nimport { Select, InputText, InputFile } from './sideComponents/form/Form'\n\n\nconst Test = () => {\n    let values = {\n        'default': 'wybierz opcje',\n        0: 'zero',\n        1: 'jeden'\n    }\n    return(\n            <form className='browser-default blueGrey text'>\n                <h2>Login</h2>\n\n                <InputText label='Test' />\n                <InputText label='Name' />\n                <InputText label='Email' />\n\n                <InputFile />\n\n                <button className='customButton'>Zaloguj</button>\n\n                <Select values={values}/>\n\n            </form>\n\n    )\n}\n\nexport default Test","import React from 'react';\nimport './style/App.css';\nimport './style/App.scss';\nimport NavBar from './components/layout/NavBar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport MemeDetails from './components/meme/MemeDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateMeme from './components/meme/CreateMeme';\nimport Test from './components/Test.js'\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar /> \n        <Switch >\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/meme/:id' component={MemeDetails} /> \n          <Route path='/zaloguj' component={SignIn} />\n          <Route path='/rejestracja' component={SignUp} />\n          <Route path='/dodaj' component={CreateMeme} />\n          <Route path='/test' component={Test} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = { \n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error') \n            return {\n                ...state,\n                authError: 'Zly login i/lub haslo!'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.error.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = { \n}\n\nconst memeReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_MEME':\n            console.log('created meme', action.meme);\n            return state;\n        case 'CREATE_MEME_ERROR':\n            console.log('create meme error: ', action.error);\n            return state;\n        case 'LIKED':\n            console.log('like added: ', action);\n            return state;\n        case 'UNLIKED':\n            console.log('unliked: ', action);\n            return state; \n        case 'LIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'UNLIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'DISLIKED':\n            console.log('dislike added: ', action);\n            return state;\n        case 'UNDISLIKED':\n            console.log('undisliked: ', action);\n            return state; \n        case 'DISLIKE_ERROR':\n            console.log('dislike error: ', action.error);\n            return state;\n        case 'UNDISLIKE_ERROR':\n                console.log('undislike error: ', action.error);\n            return state;\n        case 'CREATE_LIKE_DISLIKE_ERROR':\n            console.log('error during creation empty like and dislike', action.error);\n            return state;\n        default:\n           return state;\n\n    }\n}\n\nexport default memeReducer;\n\n","const initState = {\n    isLoading: false,\n    error: false\n}\nconst commentReducer = (state = initState, action) => {\n    switch(action.type) {\n            case 'COMMENT_ADDED':\n                console.log('comment added', action.comment);\n                return state;\n            case 'COMMENT_ERROR':\n                console.log('comment error: ', action.error);\n                return state;\n        default: return state;\n    }\n}\n\nexport default commentReducer;","import authReducer from './authReducer';\nimport memeReducer from './memeReducer';\nimport commentReducer from './commentReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    meme: memeReducer,\n    comment: commentReducer,\n    firestore: firestoreReducer, // (2) sinking data from firebase to 'firestore' !!#\n    firebase: firebaseReducer\n}); \n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';  \n\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase,  isLoaded} from 'react-redux-firebase'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\nconst fbConfig = {\n    apiKey: \"AIzaSyBstaYLJHJL11SjnDlX3kdrGDPRU7-lBSU\",\n    authDomain: \"toladnie-86b03.firebaseapp.com\",\n    databaseURL: \"https://toladnie-86b03.firebaseio.com\",\n    projectId: \"toladnie-86b03\",\n    storageBucket: \"toladnie-86b03.appspot.com\",\n    messagingSenderId: \"880801740650\",\n    appId: \"1:880801740650:web:99f835b8a87bd60a409713\",\n    measurementId: \"G-7F9NCQNM71\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(fbConfig);\n  firebase.firestore();\n\n  const store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase),\n));\n\nconst rrfConfig = {\n  userProfile: 'users',        // 2. exact name of collection\n  useFirestoreForProfile: true // 1. connect with firestore for info about user\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n  }\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className='screen valign-wrapper'>\n                                <div className=\"loading progress valign-wrapper\">\n                                  <div className=\"indeterminate\"></div>\n                                </div>\n                              </div>;\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root'));\n"],"sourceRoot":""}