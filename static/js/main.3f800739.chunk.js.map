{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInOpt.js","components/layout/SignedOutOpt.js","components/layout/NavBar.js","components/meme/LikeBarMeme.js","components/meme/Meme.js","store/actions/memeActions.js","components/meme/MemeList.js","components/dashboard/Ad.js","components/dashboard/Dashboard.js","components/meme/AddComment.js","store/actions/commentActions.js","components/meme/Comment.js","components/meme/CommentsList.js","components/meme/Comments.js","components/meme/MemeDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/meme/CreateMeme.js","App.js","store/reducers/authReducer.js","store/reducers/memeReducer.js","store/reducers/commentReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","connect","state","firebase","signOut","props","className","to","onClick","profile","initials","SignedOutOpt","links","uid","compose","firestoreConnect","collection","doc","meme","subcollections","storeAs","liked","disliked","votes","firestore","data","console","log","some","val","likeMeme","likes","length","dislikes","dislikeMeme","Title","id","key","title","Body","src","alt","Meme","this","array","result","map","el","tag","showUp","hashTag","Component","getFirestore","authId","update","FieldValue","arrayRemove","arrayUnion","MemeList","memes","Ad","Dashboard","ordered","orderBy","AddComment","comment","memeId","handleChange","e","setState","target","value","handleSubmit","preventDefault","addComment","onSubmit","onChange","placeholder","add","commentAuthorUid","commentAuthorFirstName","firstName","commentAuthorLastName","lastName","commentDate","Date","Comment","moment","unix","seconds","startOf","fromNow","CommentsList","comments","Comments","match","params","undefined","SignIn","authError","htmlFor","creds","SignUp","passwordRe","signUp","isValid","disabled","newUser","createUserWithEmailAndPassword","resp","user","set","CreateMeme","memeStatus","storageRef","storage","ref","memeRef","child","file","files","put","snapshot","getDownloadURL","url","handleChip","chips","M","Chips","getInstance","$","chipsData","createMeme","history","push","options","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","close","closeIcon","secondaryPlaceholder","limit","onChipAdd","onChipDelete","label","setRef","s","active","color","flashing","size","authorFirstName","authorLastName","authorId","postDate","_key","path","segments","like","dislike","Promise","all","App","exact","component","MemeDetails","initState","authReducer","action","message","memeReducer","isLoading","commentReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById"],"mappings":"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","file":"static/js/main.3f800739.chunk.js","sourcesContent":["const signIn = ( credentials ) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error });\n        })\n    }\n}\nconst signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ \n                type: 'SIGNOUT_SUCCESS'\n            });\n        })\n    }\n}\nconst signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                votes: {\n                    liked: [],\n                    disliked: []\n                }\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(error => {\n            dispatch({ \n                type: 'SIGNUP_ERROR',\n                error: error\n            })\n        })\n    }\n}\n\n\nexport default signIn;\nexport { signOut, signUp };","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInOpt = (props) => {\n    return(\n        <ul className='right hide-on-med-and-down'>\n            <li>\n                <NavLink to='/dodaj' className='dBrownText'>Dodaj material</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='dBrownText' onClick={props.signOut}>Wyloguj</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='btn btn-floating green lighten-1'>{props.profile.initials}</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInOpt);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutOpt = () => {\n    return(\n        <ul className='right'>\n            <li>\n                <NavLink className='dBrownText' to='/rejestracja'>SignUp</NavLink>\n            </li>\n            <li>\n                <NavLink className='dBrownText' to='/zaloguj'>Login</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default SignedOutOpt;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInOpt from './SignedInOpt';\nimport SignedOutOpt from './SignedOutOpt';\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n    const { auth, profile } = props; // takes states !!$\n    const links = auth.uid ? <SignedInOpt profile={profile} /> : <SignedOutOpt />\n    return(\n        <nav className='nav-wrapper blueGrey'>\n            <div className='container'>\n                    <Link to='/' className='brand-logo text'>to*Ladnie</Link>\n                \n                { links }\n\n            </div>\n        </nav>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,  //!!$\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nconst LikeBarMeme = (props) =>{\n    const { liked, votes, disliked } = props;\n    console.log('likeBarMeme render for props: ', props);\n    if(liked && liked.some(val => val === props.meme)) {\n        if(votes) {\n            return( //return if like cl4icked\n                <div className='likeButtonsContainer'>\n                    <div className='likeButtons liked' onClick={() => props.likeMeme(props.meme)}>{votes.likes.liked.length}</div>\n                    <div className='likeButtons likedDislike'>{votes.dislikes.disliked.length}</div>\n                </div>  \n            );\n        }\n        return (\n            <div className='likeButtonsContainer text'>\n                 Lubisz to lubisz                                  {/* move function to the backend asap */}\n            </div>\n        );\n    } else if (disliked && disliked.some(val => val === props.meme)) {\n        if(votes) {\n            return( // return after dislike meme\n                <div className='likeButtonsContainer'>\n                    <div className='likeButtons dislikedLike'>{votes.likes.liked.length}</div>\n                    <div className='likeButtons disliked' onClick={() => props.dislikeMeme(props.meme)}>{votes.dislikes.disliked.length}</div>\n                </div>  \n            );\n        }\n        return (\n            <div className='likeButtonsContainer text'>\n                 Oj nie lubisz                         {/* move function to the backend asap */}\n            </div>\n        );\n    } else {\n        return(\n            <div className='likeButtonsContainer'>\n                <div className='likeButtons like text' onClick={() => props.likeMeme(props.meme)}>+</div>\n                <div className='likeButtons dislike text' onClick={() => props.dislikeMeme(props.meme)}>-</div>\n            </div>  \n        );\n    }\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        liked: state.firebase.profile.liked,\n        disliked: state.firebase.profile.disliked,\n        votes: state.firestore.data.votes\n    }\n}\n\n//export default connect(mapStateToProps)(LikeBarMeme)\n\nexport default compose(\n    firestoreConnect((props) => [\n        { collection: 'meme', doc: props.meme, subcollections: [{ collection: 'votes' }], storeAs: 'votes'},\n    ]), connect(mapStateToProps)\n)(LikeBarMeme); \n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { likeMeme, dislikeMeme } from '../../store/actions/memeActions'\nimport { Link } from 'react-router-dom'\nimport LikeBarMeme from './LikeBarMeme'\n\nconst showUp = ( array ) => {\n    let result = '';\n    array && array.map((el) => {\n        result += '#' + el.tag + ' '\n        return result\n    })\n    return result;\n}\n\nconst Title = (props) =>{\n    if(props.meme.id) {\n        return (\n            <Link to={'/meme/' + props.meme.id} key={'linktitle' + props.meme.id}>\n                {props.meme.title}\n            </Link> \n        )\n    } else {\n        return (\n            <span>\n                {props.meme.title}\n            </span>\n        );\n    }\n}\n\nconst Body = (props) => {\n    if(props.meme.id) {\n        return (\n            <Link to={'/meme/' + props.meme.id} key={'link' + props.meme.id}>\n                <img src={props.meme.meme} alt={props.meme.title} className='responsive-img z-depth-0 memeImg' />\n            </Link>\n        )\n    } else {\n        return (\n            <span>\n                <img src={props.meme.meme} alt={props.meme.title} className='responsive-img z-depth-0 memeImg' />\n            </span>\n        );\n    }\n}\n\nclass Meme extends Component {\n\n    render() {\n        const id = this.props.id ? this.props.id : this.props.meme.id;\n        console.log('RENDER MEME');\n        return(\n            <div className='meme blueGrey text m8 s12 z-depth-1'>\n                <div className='transparent text memeTitle'>\n                    <Title {...this.props}/>\n                </div>\n                <div className='toSides blueGrey dBrownText darken-1 memeInfo'>\n                    <p className='info'>{this.props.meme.type}</p>\n                    <p className='info'>{showUp(this.props.meme.hashTag)}</p>\n                </div>\n                <div className='memeContent'>\n                    <Body {...this.props}/>\n                </div> \n                 <div className='transparent underMeme'>\n                    <LikeBarMeme meme={id} likeMeme={this.props.likeMeme} dislikeMeme={this.props.dislikeMeme} />\n                 </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        likeMeme: (id) => dispatch(likeMeme(id)),\n        dislikeMeme: (id) => dispatch(dislikeMeme(id))\n    }\n}\n\nconst mapStateToProps = (state, props) => {  \n    const id = props.meme.id ? props.meme.id : props.id;\n    return {\n        id: id\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meme);\n\n\n","export const createMeme = (meme) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;  // get info about author from state\n        const authId = getState().firebase.auth.uid;    // and his id\n        firestore.collection('meme').add({\n            ...meme,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authId,\n            postDate: new Date()\n        }).then((result) => {\n            let id = result._key.path.segments[1];\n            const like = firestore.collection('meme').doc(id).collection('votes').doc('likes').set({'liked': []});\n            const dislike = firestore.collection('meme').doc(id).collection('votes').doc('dislikes').set({'disliked': []});\n            Promise.all([like, dislike]).then(() => {\n                dispatch({ type: 'CREATE_MEME', meme})\n            }).catch((error) => {\n                dispatch({ type: 'CREATE_LIKE_DISLIKE_ERROR', error})\n            })\n        }).catch((error) => {\n            dispatch({ type: 'CREATE_MEME_ERROR', error})\n        })\n    }\n}\n\nconst likeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.votes.likes;\n        if(votes.liked.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).collection('votes').doc('likes').update({\n                liked : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayRemove(id)\n                }).then(() => {\n                    dispatch({ type: 'UNLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNLIKE_ERROR', error})\n            })\n        } else {\n            firestore.collection('meme').doc(id).collection('votes').doc('likes').update({\n                liked : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'LIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'LIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'LIKE_ERROR', error})\n            })\n        } \n    } \n}\nconst dislikeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.votes.dislikes;\n\n        if(votes.disliked.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).collection('votes').doc('dislikes').update({\n                disliked : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayRemove(id) \n                }).then(() => {\n                    dispatch({ type: 'UNDISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNDISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNDISLIKE_ERROR', error})\n            })\n        } else {       \n            firestore.collection('meme').doc(id).collection('votes').doc('dislikes').update({\n                disliked : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'DISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'DISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'DISLIKE_ERROR', error})\n            })\n        } \n    } \n}\n\nexport { likeMeme, dislikeMeme }","import React from 'react';\nimport Meme from './Meme';\n\nconst MemeList = ({ memes }) => {\n    return (\n        <div className='memeList'>\n            { memes && memes.map(meme => {\n                return (\n                        <Meme key={meme.id} meme={meme} />\n                )\n            }) }\n        </div>\n    );\n}\n\nexport default MemeList;","import React from 'react';\n\nconst Ad = () => {\n    return (\n    <div className='card z-depth-1 blueGrey'>\n        <span className='text adTitle'>Reklama</span>\n    </div>\n    );\n}\nexport default Ad;","import React, { Component } from 'react';\nimport MemeList from '../meme/MemeList';\nimport Ad from './Ad';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n     render() {\n    console.log('dashboard render');\n         \n         const { memes, auth } = this.props;  // zapisujemy stala memes jako propsa z memami, w auth trzymamy info o zalogowaniu \n         if (!auth.uid) return <Redirect to='/zaloguj' />\n\n         return(\n             <div className='container dashboard'>\n                 <div className='row'>\n                    <div className='col s12 m8'>\n                        <MemeList memes={memes}/>  {/* aby przekazac ja tutaj @@ */}\n                    </div>\n                    <div className='col m4'>\n                        <Ad />\n                    </div>\n                 </div>\n             </div>\n         );\n     }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        memes: state.firestore.ordered.meme,       // (3) managing data what we sinked !!#\n        auth: state.firebase.auth                   // there we have got info about user authentication is it on or off\n    }       \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([ {\n        collection: 'meme' , orderBy: ['postDate', 'desc']// (1) sink from !!#\n    } ])\n)(Dashboard); \n ","import React, { Component } from 'react'\nimport { TextInput } from 'react-materialize'\nimport { addComment } from '../../store/actions/commentActions'\nimport { connect } from 'react-redux'\n\n\nexport class AddComment extends Component {\n    state = {\n        comment: '',\n        memeId: this.props.id\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('state', this.props)\n        this.props.addComment(this.state)\n    }\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit} className='commentForm s12 m12 l12 xl12'>\n                <TextInput onChange={this.handleChange} placeholder='HAHA Kurła dobre..' id='comment' />\n                <button className='btn pink z-depth-1'>Dodaj komentarz</button>\n            </form>\n        ); \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addComment: (comment) => dispatch(addComment(comment))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddComment);","export const addComment = ( comment ) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile; // get info about user\n        const authId = getState().firebase.auth.uid; // and his id\n        console.log('add comment : ', comment);\n\n        firestore.collection('meme').doc(comment.memeId).collection('comments').add({\n            ...comment,\n            commentAuthorUid: authId,\n            commentAuthorFirstName: profile.firstName,\n            commentAuthorLastName: profile.lastName,\n            commentDate: new Date()\n        }).then(() => {\n            dispatch({ type: 'COMMENT_ADDED', comment})\n        }).catch((error) => {\n            dispatch({ type: 'COMMENT_ERROR', error})\n        })\n    }\n}","import React from 'react'\nimport moment from 'moment';\n\nconst Comment = ({comment}) => {\n\n    return(\n        <div className='comments z-depth-1 blueGrey'>\n            <div className='toSides commentTitle'>\n                <span className=''>{comment.commentAuthorFirstName}</span>\n                <span className='time'>{moment.unix(comment.commentDate.seconds).startOf('minute').fromNow()}</span>\n            </div>\n                <div className='blueGrey comment'>\n                        <span>{comment.comment}</span>\n                </div>\n        </div>\n    );\n}\n\nexport default Comment;\n","import React from 'react'\nimport Comment from './Comment'\n\nconst CommentsList = ({ comments }) => {\n    console.log('CommentsList render');\n    if(comments && comments.length > 0) {\n        return(\n            comments.map(comment => {\n                return (\n                    <Comment key={comment.id} comment={comment} />\n                );\n            })\n        );\n    } else {\n        return (\n            <p>Brak Komentarzy, bądź pierwszym który dorzuci swoje trzy grosze!</p>\n        );\n    }\n    \n}\n\nexport default CommentsList;","import React from 'react'\nimport AddComment from './AddComment'\nimport CommentsList from './CommentsList'\n\nconst Comments = (props) => {\n    return(\n        <div className='commentsContainer blueGrey darken-1 text z-depth-1'>\n                <div className='commentTitle blueGrey'>Komentarze dla meme</div>\n                <div className='blueGrey darken-1 m8 s12'>\n                    <CommentsList comments={props.comments} />\n                    <AddComment id={props.id} />\n                </div>\n        </div>\n    );\n}\n\nexport default Comments","import React from 'react';\nimport Meme from './Meme';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nimport Comments from './Comments'\n\n\nconst MemeDetails = (props) => {\n    const { meme, auth, comments, id} = props;\n    console.log('MemeDetails RENDER');\n    console.log('meme details :', meme, id)\n\n    if (!auth.uid) return <Redirect to='/' />\n    if (meme && comments !== undefined) {\n        return(\n        <div className='container section'>\n            <Meme meme={meme} id={id}/> \n            <Comments id={id} comments={comments} />\n        </div>\n        );\n    } else {\n        return (<p>Ladowanie mema</p>);\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n        const id = props.match.params.id;\n        const data = state.firestore.data;\n        const ordered = state.firestore.ordered;\n        const meme = data.meme ? data.meme[id] : null;\n        const comments = ordered.comments ? ordered.comments : null;\n        return {\n            id: id,\n            meme: meme,\n            auth: state.firebase.auth,\n            comments: comments\n    }\n}\n\nexport default compose(\n    firestoreConnect((props) => [\n        { collection: 'meme', orderBy: 'postDate'},\n        { collection: 'meme', doc: props.match.params.id, subcollections: [{ collection: 'comments' }], storeAs: 'comments', orderBy: 'commentDate' },\n    ]), connect(mapStateToProps)\n)(MemeDetails); \n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport signIn from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;  // check if is there error\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='green-text darken-2'>Sign In</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange} />\n                    </div>\n                    <button className='btn pink lighten-3 z-depth-1'>Zaloguj</button>\n                    <div className='red-text center'>\n                        { authError ? <p>Zly login i/lub haslo!</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nexport class SignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        passwordRe: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const {\n            firstName,\n            lastName,\n            email,\n            password,\n            passwordRe, } = this.state;\n\n        const isValid = firstName === '' || lastName === '' || email === '' || password !== passwordRe;\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='green-text darken-2'>Rejestracja</h5>\n                    <div className='input-field'>\n                        <label htmlFor='firstName'>Imie</label>\n                        <input type='text' id='firstName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastName'>Nazwisko</label>\n                        <input type='text' id='lastName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='passwordRe'>Powtorz haslo</label>\n                    <input type='password' id='passwordRe' onChange={this.handleChange} />\n                    </div>\n                    <button disabled={isValid} className='btn pink lighten-3 z-depth-1'>Zarejestruj</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError       //on auth reducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createMeme } from '../../store/actions/memeActions';\nimport { Redirect } from 'react-router-dom'\nimport M from 'materialize-css';\nimport { Chip, TextInput, Icon, Select, Col, Preloader } from 'react-materialize'\nimport '../../index.css';\nimport $ from 'jquery'\nimport { getFirebase } from 'react-redux-firebase';\nimport 'firebase/storage';\n\nexport class CreateMeme extends Component {\n    state = {\n        title: '',\n        meme: '',\n        type: '',\n        hashTag: [],\n        memeStatus: 0\n    }\n\n    handleChange = (e) => {\n        if(e.target.type === 'file') {\n            let firebase = getFirebase();\n            const storageRef = firebase.storage().ref();\n            const meme = e.target.value;\n            const memeRef = storageRef.child(meme);\n            const file = e.target.files[0];\n            this.setState({\n                memeStatus: 1\n            }, () => {\n                memeRef.put(file).then((snapshot) => {\n                    memeRef.getDownloadURL().then((url) => {\n                        this.setState({\n                            meme: url,\n                            memeStatus: 2\n                        })\n                    })\n                }).catch((error) => {\n                    this.setState({ memeStatus: 3 });\n                });\n\n            });\n        } else {\n            this.setState({\n                [e.target.id]: e.target.value\n            }, () => {\n                console.log(this.state);\n            })\n        }\n    }\n\n    handleChip = (e) => {\n        let chips = M.Chips.getInstance($('.chips')).chipsData;  //getting data from chip elemenet           \n        this.setState({\n            hashTag: chips\n        })\n    } \n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createMeme(this.state);\n         this.props.history.push('/');  //redirect user to '/' page   \n    }\n    \n\n    \n   render() {\n\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/zaloguj' />\n\n        const LoadingStatus = () => {\n            if(this.state.memeStatus === 1) {\n                           return <Col s={4}>\n                           <Preloader\n                             active\n                             color=\"blue\"\n                             flashing={false}\n                             size=\"small\"\n                           />\n                         </Col>   \n            } else if(this.state.memeStatus === 2) {\n                return <p className='green-text'>Grafika zaladowana!</p>\n            } else if(this.state.memeStatus === 3) {\n                return <p className='red-text'>Grafika nie została załadowana, spróbuj ponownie.</p>\n            }\n            return false\n        }\n        \n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <div className='input-field'>\n                        <TextInput placeholder='Tytuł wrzutki' id='title' onChange={this.handleChange} />\n                    </div>\n                    <Select\n                        onChange={this.handleChange}\n                        value={this.state.type}\n                        id='type'\n                        options={{\n                            classes: '',\n                            dropdownOptions: {\n                            alignment: 'left',\n                            autoTrigger: true,\n                            closeOnClick: true,\n                            constrainWidth: true,\n                            container: null,\n                            coverTrigger: true,\n                            hover: false,\n                            inDuration: 150,\n                            onCloseEnd: null,\n                            onCloseStart: null,\n                            onOpenEnd: null,\n                            onOpenStart: null,\n                            outDuration: 250\n                            }\n                        }}\n                        >\n                        <option disabled value=\"\">Typ wrzutki</option>\n                        <option value='Humor'>Humor</option>\n                        <option value='Ciekawostka'>Ciekawostka</option>\n                        <option value='Historia'>Historyczne</option>\n                    </Select>\n\n                    <div className='input-field'>\n                    <Chip\n                        close={false}\n                        closeIcon={<Icon className=\"close\">close</Icon>}\n                        id='hashTag'\n                        options={{\n                            placeholder: 'Tag > enter',\n                            secondaryPlaceholder: '(max. 8)',\n                            limit: 8,\n                            onChipAdd: this.handleChip,\n                            onChipDelete: this.handleChip,\n                            data: this.state.hashTag\n                        }} />\n                    </div>\n                    \n                    <div className='input-field'>\n                        <TextInput type='file' label='Zapodaj mema' id='meme' onChange={this.handleChange} ref={this.setRef} />   {/* setting up reference to this place */}\n                        <LoadingStatus />\n                    </div>\n                    <button className='btn pink z-depth-1'>Dodaj</button>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth   //comment in dashboard.js\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMeme: (meme) => dispatch(createMeme(meme))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMeme);","import React from 'react';\nimport './App.css';\nimport NavBar from './components/layout/NavBar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport MemeDetails from './components/meme/MemeDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateMeme from './components/meme/CreateMeme';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar /> \n        <Switch >\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/meme/:id' component={MemeDetails} /> \n          <Route path='/zaloguj' component={SignIn} />\n          <Route path='/rejestracja' component={SignUp} />\n          <Route path='/dodaj' component={CreateMeme} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = { \n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error') \n            return {\n                ...state,\n                authError: 'Zly login i/lub haslo!'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.error.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = { \n}\n\nconst memeReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_MEME':\n            console.log('created meme', action.meme);\n            return state;\n        case 'CREATE_MEME_ERROR':\n            console.log('create meme error: ', action.error);\n            return state;\n        case 'LIKED':\n            console.log('like added: ', action);\n            return state;\n        case 'UNLIKED':\n            console.log('unliked: ', action);\n            return state; \n        case 'LIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'UNLIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'DISLIKED':\n            console.log('dislike added: ', action);\n            return state;\n        case 'UNDISLIKED':\n            console.log('undisliked: ', action);\n            return state; \n        case 'DISLIKE_ERROR':\n            console.log('dislike error: ', action.error);\n            return state;\n        case 'UNDISLIKE_ERROR':\n                console.log('undislike error: ', action.error);\n            return state;\n        case 'CREATE_LIKE_DISLIKE_ERROR':\n            console.log('error during creation empty like and dislike', action.error);\n            return state;\n        default:\n           return state;\n\n    }\n}\n\nexport default memeReducer;\n\n","const initState = {\n    isLoading: false,\n    error: false\n}\nconst commentReducer = (state = initState, action) => {\n    switch(action.type) {\n            case 'COMMENT_ADDED':\n                console.log('comment added', action.comment);\n                return state;\n            case 'COMMENT_ERROR':\n                console.log('comment error: ', action.error);\n                return state;\n        default: return state;\n    }\n}\n\nexport default commentReducer;","import authReducer from './authReducer';\nimport memeReducer from './memeReducer';\nimport commentReducer from './commentReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    meme: memeReducer,\n    comment: commentReducer,\n    firestore: firestoreReducer, // (2) sinking data from firebase to 'firestore' !!#\n    firebase: firebaseReducer\n}); \n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';  \n\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase,  isLoaded} from 'react-redux-firebase'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst fbConfig = {\n    apiKey: \"AIzaSyBstaYLJHJL11SjnDlX3kdrGDPRU7-lBSU\",\n    authDomain: \"toladnie-86b03.firebaseapp.com\",\n    databaseURL: \"https://toladnie-86b03.firebaseio.com\",\n    projectId: \"toladnie-86b03\",\n    storageBucket: \"toladnie-86b03.appspot.com\",\n    messagingSenderId: \"880801740650\",\n    appId: \"1:880801740650:web:99f835b8a87bd60a409713\",\n    measurementId: \"G-7F9NCQNM71\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(fbConfig);\n  firebase.firestore();\n\n  const store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase),\n));\n\nconst rrfConfig = {\n  userProfile: 'users',        // 2. exact name of collection\n  useFirestoreForProfile: true // 1. connect with firestore for info about user\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n  }\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className='screen valign-wrapper'>\n                                <div className=\"loading progress valign-wrapper\">\n                                  <div className=\"indeterminate\"></div>\n                                </div>\n                              </div>;\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root'));\n"],"sourceRoot":""}