{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInOpt.js","components/layout/SignedOutOpt.js","components/layout/NavBar.js","components/meme/LikeBarMeme.js","components/meme/Meme.js","store/actions/memeActions.js","components/meme/MemeList.js","components/dashboard/Ad.js","components/dashboard/Dashboard.js","components/meme/AddComment.js","store/actions/commentActions.js","components/meme/Comment.js","components/meme/CommentsList.js","components/meme/Comments.js","components/meme/MemeDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/meme/CreateMeme.js","components/Test.js","App.js","store/reducers/authReducer.js","store/reducers/memeReducer.js","store/reducers/commentReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","connect","state","firebase","signOut","props","className","to","onClick","profile","initials","SignedOutOpt","links","uid","liked","disliked","data","firestore","likes","meme","id","dislikes","console","log","some","val","Fragment","likeMeme","length","dislikeMeme","Meme","this","redirect","key","title","array","result","forEach","el","tag","showUp","hashTag","src","alt","Component","getFirestore","authId","votes","collection","doc","update","FieldValue","arrayRemove","arrayUnion","MemeList","memes","map","Ad","Dashboard","compose","ordered","firestoreConnect","orderBy","AddComment","comment","memeId","toComment","handleChange","e","setState","target","value","handleSubmit","preventDefault","addComment","onSubmit","onChange","placeholder","React","add","commentAuthorUid","commentAuthorFirstName","firstName","commentAuthorLastName","lastName","commentDate","Date","Comment","visible","comments","moment","unix","seconds","startOf","fromNow","commentId","commentTo","CommentsList","filter","Comments","MemeDetails","undefined","match","params","subcollections","storeAs","SignIn","authError","htmlFor","creds","SignUp","passwordRe","signUp","isValid","disabled","newUser","createUserWithEmailAndPassword","resp","user","set","CreateMeme","memeStatus","storageRef","storage","ref","memeRef","child","file","files","put","snapshot","getDownloadURL","url","handleChip","chips","M","Chips","getInstance","$","chipsData","createMeme","history","push","options","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","close","closeIcon","secondaryPlaceholder","limit","onChipAdd","onChipDelete","label","setRef","s","active","color","flashing","size","authorFirstName","authorLastName","authorId","postDate","Test","App","exact","path","component","initState","authReducer","action","message","memeReducer","isLoading","commentReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById"],"mappings":"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","file":"static/js/main.3abcd64b.chunk.js","sourcesContent":["const signIn = ( credentials ) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error });\n        })\n    }\n}\nconst signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ \n                type: 'SIGNOUT_SUCCESS'\n            });\n        })\n    }\n}\nconst signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                liked: [],\n                disliked: []\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(error => {\n            dispatch({ \n                type: 'SIGNUP_ERROR',\n                error: error\n            })\n        })\n    }\n}\n\n\nexport default signIn;\nexport { signOut, signUp };","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInOpt = (props) => {\n    return(\n        <ul className='right hide-on-med-and-down'>\n            <li>\n                <NavLink to='/dodaj' className='dBrownText'>Dodaj material</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='dBrownText' onClick={props.signOut}>Wyloguj</NavLink>\n            </li>\n            <li>\n                <NavLink to='/' className='btn btn-floating green lighten-1'>{props.profile.initials}</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInOpt);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutOpt = () => {\n    return(\n        <ul className='right'>\n            <li>\n                <NavLink className='dBrownText' to='/rejestracja'>SignUp</NavLink>\n            </li>\n            <li>\n                <NavLink className='dBrownText' to='/zaloguj'>Login</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default SignedOutOpt;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInOpt from './SignedInOpt';\nimport SignedOutOpt from './SignedOutOpt';\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n    const { auth, profile } = props; // takes states !!$\n    const links = auth.uid ? <SignedInOpt profile={profile} /> : <SignedOutOpt />\n    return(\n        <nav className='nav-wrapper blueGrey'>\n            <div className='container'>\n                    <Link to='/' className='brand-logo text'>to*Ladnie</Link>\n                \n                { links }\n\n            </div>\n        </nav>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,  //!!$\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst LikeBarMeme = (props) =>{\n        const { liked, disliked, data } = props;\n        let likes = data.meme[props.id].likes;\n        let dislikes = data.meme[props.id].dislikes;\n        console.log('LikeBarMeme render')\n        return(\n            <div className='likeButtonsContainer'>\n                {(likes && liked && liked.some(val => val === props.id)) || (likes && disliked && disliked.some(val => val === props.id)) ? ( \n                    liked.some(val => val === props.id) ? (\n                        <React.Fragment>\n                            <div className='likeButtons liked' onClick={() => props.likeMeme(props.id)}>\n                                {likes.length}\n                            </div>                                               \n                            <div className='likeButtons likedDislike'>\n                                {dislikes.length}\n                            </div>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <div className='likeButtons dislikedLike'>\n                                {likes.length}\n                            </div>\n                            <div className='likeButtons disliked' onClick={() => props.dislikeMeme(props.id)}>\n                                {dislikes.length}\n                            </div>\n                        </React.Fragment>\n                    )\n                ) : (\n                    <>\n                    <div className='likeButtons like text' onClick={() => props.likeMeme(props.id)}>+</div>\n                    <div className='likeButtons dislike text' onClick={() => props.dislikeMeme(props.id)}>-</div>\n                    </>\n                )}\n\n            </div>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        liked: state.firebase.profile.liked,\n        disliked: state.firebase.profile.disliked,\n        data: state.firestore.data\n    }\n}\n\nexport default connect(mapStateToProps)(LikeBarMeme)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { likeMeme, dislikeMeme } from '../../store/actions/memeActions'\nimport { Link } from 'react-router-dom'\nimport LikeBarMeme from './LikeBarMeme'\n\nconst showUp = ( array ) => {\n    let result = '';\n    array && array.forEach((el) => {\n        result += '#' + el.tag + ' '\n        return result\n    })\n    return result;\n}\n\nclass Meme extends Component {\n    render() {\n        console.log('RENDER MEME');\n        return(\n            <div className='meme blueGrey text m8 s12 z-depth-1'>\n                <div className='transparent text memeTitle'>\n                    {this.props.redirect ? (\n                        <Link to={'/meme/' + this.props.meme.id} key={'linktitle' + this.props.meme.id}>\n                            {this.props.meme.title}\n                        </Link>\n                    ) : (\n                        <React.Fragment>\n                            {this.props.meme.title}\n                        </React.Fragment>\n                    )}\n                </div>\n                <div className='toSides blueGrey dBrownText darken-1 memeInfo'>\n                    <p className='info'>{this.props.meme.type}</p>\n                    <p className='info'>{showUp(this.props.meme.hashTag)}</p>\n                </div>\n                <div className='memeContent'>\n                    {this.props.redirect ? (\n                        <Link to={'/meme/' + this.props.id} key={'link' + this.props.id}>\n                            <img src={this.props.meme.meme} alt={this.props.meme.title} className='responsive-img z-depth-0 memeImg' />\n                        </Link>\n                    ) : (\n                        <React.Fragment>\n                            <img src={this.props.meme.meme} alt={this.props.meme.title} className='responsive-img z-depth-0 memeImg' />\n                        </React.Fragment>\n                    )}\n                </div> \n                 <div className='transparent underMeme'>\n                    <LikeBarMeme id={this.props.id} likeMeme={this.props.likeMeme} dislikeMeme={this.props.dislikeMeme} />\n                 </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        likeMeme: (id) => dispatch(likeMeme(id)),\n        dislikeMeme: (id) => dispatch(dislikeMeme(id))\n    }\n}\n\nconst mapStateToProps = (state, props) => {  \n    return {\n        id: props.meme.id\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meme);\n\n\n","export const createMeme = (meme) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;  // get info about author from state\n        const authId = getState().firebase.auth.uid;    // and his id\n        firestore.collection('meme').add({\n            ...meme,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authId,\n            postDate: new Date(),\n            likes: [],\n            dislikes: []\n        }).then((result) => {\n                dispatch({ type: 'CREATE_MEME', meme})\n        }).catch((error) => {\n            dispatch({ type: 'CREATE_MEME_ERROR', error})\n        })\n    }\n}\n\nconst likeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.meme[id];\n        console.log(votes)\n\n        if(votes.likes.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).update({\n                likes : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayRemove(id)\n                }).then(() => {\n                    dispatch({ type: 'UNLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNLIKE_ERROR', error})\n            })\n        } else {\n            firestore.collection('meme').doc(id).update({\n                likes : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    liked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'LIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'LIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'LIKE_ERROR', error})\n            })\n        } \n    } \n}\nconst dislikeMeme = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const authId = getState().firebase.auth.uid;\n        const votes = getState().firestore.data.meme[id];\n\n        if(votes.dislikes.some(val => val === authId)) {\n            firestore.collection('meme').doc(id).update({\n                dislikes : firestore.FieldValue.arrayRemove(authId)\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayRemove(id) \n                }).then(() => {\n                    dispatch({ type: 'UNDISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'UNDISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'UNDISLIKE_ERROR', error})\n            })\n        } else {       \n            firestore.collection('meme').doc(id).update({\n                dislikes : firestore.FieldValue.arrayUnion(authId) //array update\n            })\n            .then(() => {\n                firestore.collection('users').doc(authId).update({\n                    disliked : firestore.FieldValue.arrayUnion(id) //array update\n                }).then(() => {\n                    dispatch({ type: 'DISLIKED', authId})\n                }).catch((error) => {\n                    dispatch({ type: 'DISLIKE_ERROR', error})\n                })\n            }).catch((error) => {\n                dispatch({ type: 'DISLIKE_ERROR', error})\n            })\n        } \n    } \n}\n\nexport { likeMeme, dislikeMeme }","import React from 'react';\nimport Meme from './Meme';\n\nconst MemeList = ({ memes }) => {\n    return (\n        <div className='memeList'>\n            { memes && memes.map(meme => {\n                return (\n                        <Meme key={meme.id} meme={meme} redirect={true}/>\n                )\n            }) }\n        </div>\n    );\n}\n\nexport default MemeList;","import React from 'react';\n\nconst Ad = () => {\n    return (\n    <div className='card z-depth-1 blueGrey'>\n        <span className='text adTitle'>Reklama</span>\n    </div>\n    );\n}\nexport default Ad;","import React, { Component } from 'react';\nimport MemeList from '../meme/MemeList';\nimport Ad from './Ad';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n    render() {\n    console.log('dashboard render');\n         \n         const { memes, auth } = this.props;  \n         if (!auth.uid) return <Redirect to='/zaloguj' />\n\n         return(\n             <div className='container dashboard'>\n                 <div className='row'>\n                    <div className='col s12 m8'>\n                        <MemeList memes={memes}/>  {/* aby przekazac ja tutaj @@ */}\n                    </div>\n                    <div className='col m4'>\n                        <Ad />\n                    </div>\n                 </div>\n             </div>\n         );\n     }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        memes: state.firestore.ordered.meme,       // (3) managing data what we sinked !!#\n        auth: state.firebase.auth                   // there we have got info about user authentication is it on or off\n    }       \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([ {\n        collection: 'meme' , orderBy: ['postDate', 'desc']// (1) sink from !!#\n    },\n    {\n        collection: 'meme'// (1) sink from !!#\n    } ])\n)(Dashboard); \n ","import React from 'react'\nimport { TextInput } from 'react-materialize'\nimport { addComment } from '../../store/actions/commentActions'\nimport { connect } from 'react-redux'\n\n\nexport class AddComment extends React.Component {\n    state = {\n        comment: '',\n        memeId: this.props.id,\n        toComment: this.props.toComment\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('state before debug', this.state);\n        console.log('props before debug', this.props);\n        this.props.addComment(this.state);\n        this.setState({\n            comment: ''\n        })\n    }\n    \n    render() {\n        return(\n            <form onSubmit={this.handleSubmit} className='commentForm s12 m12'>\n                <TextInput onChange={this.handleChange} placeholder='HAHA Kurła dobre..' \n                           value={this.state.comment} id='comment' className='nBlueText'/>\n                <button className='btn dBrown z-depth-1'>Dodaj komentarz</button>\n            </form>\n        ); \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addComment: (comment) => dispatch(addComment(comment))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddComment);","export const addComment = ( comment ) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile; // get info about user\n        const authId = getState().firebase.auth.uid; // and his id\n        console.log('add comment : ', comment);\n\n        firestore.collection('meme').doc(comment.memeId).collection('comments').add({\n            ...comment,\n            commentAuthorUid: authId,\n            commentAuthorFirstName: profile.firstName,\n            commentAuthorLastName: profile.lastName,\n            commentDate: new Date(),\n            likes: [],\n            dislikes: []\n        }).then(() => {\n            dispatch({ type: 'COMMENT_ADDED', comment})\n        }).catch((error) => {\n            dispatch({ type: 'COMMENT_ERROR', error})\n        })\n    }\n}","import React from 'react'\nimport moment from 'moment';\nimport AddComment from './AddComment';\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        }\n    }\n    render() {\n        console.log('testujemy:         ', this.props.comments);\n\n        return(\n            <div className='blueGrey comments z-depth-1'>\n                <div className='toSides commentTitle'>\n                    <span className=''>{this.props.comment.commentAuthorFirstName}</span>\n                    <span className='time'>{moment.unix(this.props.comment.commentDate.seconds).startOf('minute').fromNow()}</span>\n                </div>\n                <div className='toSides'>\n                    <div className='blueGrey comment'>\n                        <span>{this.props.comment.comment}</span>\n                    </div>\n                    <div className='commentExtras'>\n                        <p onClick={() => { this.setState({ visible: !this.state.visible })}}>Odpowiedz</p>\n                    </div>\n                </div>\n                <div className={this.state.visible ? 'visible' : 'invisible'}>\n                    <AddComment id={this.props.comment.memeId} toComment={this.props.commentId} />\n\n                </div>\n                \n                {this.props.commentTo && this.props.commentTo.length > 0 ?        // check if there is comment to comment, if so display it\n                    (\n                    this.props.commentTo.map((comment) => { \n                            return <Comment key={comment.id} comment={comment} /> \n                    }))\n                : null }                \n            </div>\n        );\n    }\n}\n    \n\nexport default Comment;\n","import React from 'react'\nimport Comment from './Comment'\n\nconst CommentsList = ({ comments }) => {\n    console.log('CommentsList render');\n    if(comments && comments.length > 0) {\n        return(\n            comments.filter(comment => comment.toComment === null).map(comment => {\n                let commentTo = comments.filter(val => val.toComment === comment.id);\n                return (\n                    <Comment key={comment.id} comment={comment} comments={comments} commentTo={commentTo} commentId={comment.id}/>\n                );\n            })\n        ); \n    } else {\n        return (\n            <div className='noComments'>\n                Brak Komentarzy, bądź pierwszym który dorzuci swoje trzy grosze!\n            </div>\n        );\n    }\n    \n}\n\nexport default CommentsList;\n\n/*\n\nimport React from 'react'\nimport Comment from './Comment'\n\nconst CommentsList = ({ comments }) => {\n    console.log('CommentsList render');\n    if(comments && comments.length > 0) {\n        return(\n            comments.filter(comment => comment.toComment === null).map(comment => {\n                let commentTo = [];\n                commentTo.push(comments.filter(val => val.toComment === comment.id));\n                return (\n                    <Comment key={comment.id} comment={comment} comments={commentTo} commentId={comment.id}/>\n                );\n            })\n        ); \n    } else {\n        return (\n            <div className='noComments'>\n                Brak Komentarzy, bądź pierwszym który dorzuci swoje trzy grosze!\n            </div>\n        );\n    }\n    \n}\n\nexport default CommentsList;\n\n*/","import React from 'react'\nimport AddComment from './AddComment'\nimport CommentsList from './CommentsList'\n\nconst Comments = (props) => {\n    return(\n        <div className='commentsContainer blueGrey darken-1 text z-depth-1'>\n                <div className='commentTitle blueGrey'>Komentarze dla meme</div>\n                <div className='blueGrey darken-1 m8 s12'>\n                    <CommentsList comments={props.comments} />\n                    <AddComment id={props.id} toComment={null} />\n                </div>\n        </div>\n    );\n}\n\nexport default Comments","import React from 'react';\nimport Meme from './Meme';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nimport Comments from './Comments'\n\n\nclass MemeDetails extends React.Component {\n    //shouldComponentUpdate(nextProps, nextState) {\n        //return this.props.meme && this.props.comment ? false : true;\n    //}\n    render() {\n\n    const { meme, auth, comments } = this.props;\n\n    if (!auth.uid) return <Redirect to='/' />           // if not logged in redirect to login page\n\n    if (meme && comments !== undefined) {\n        return(\n        <div className='container section'>\n            <Meme meme={meme[0]} likes={meme[0].likes} dislikes={meme[0].dislikes} redirect={false}/> \n            <Comments id={meme[0].id} comments={comments} />\n        </div>\n        );\n    } else {\n        return (<p>Ladowanie mema</p>);\n    }\n}\n}\n\nconst mapStateToProps = (state, props) => {\n        const id = props.match.params.id;\n        const ordered = state.firestore.ordered;\n        const meme = ordered.meme ? ordered.meme.filter(val => val.id === id) : null;\n        const comments = ordered.comments ? ordered.comments : null;\n        return {\n            id: id,\n            meme: meme,\n            auth: state.firebase.auth,\n            comments: comments,\n         //   votes: state.firestore.data.votes\n    }\n}\n\nexport default compose(\n    firestoreConnect((props) => [\n        { collection: 'meme', orderBy: ['postDate', 'desc']},\n        { collection: 'meme', doc: props.match.params.id, subcollections: [{ collection: 'comments' }], storeAs: 'comments', orderBy: 'commentDate' },\n        //{ collection: 'meme', doc: props.match.params.id, subcollections: [{ collection: 'votes' }], storeAs: 'votes'},\n    ]), connect(mapStateToProps)\n)(MemeDetails); \n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport signIn from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;  // check if is there error\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='blueGrey text'>\n                    <h5 className='green-text darken-2'>Zaloguj się</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} className='nBlueText'/>  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange}  className='nBlueText'/>\n                    </div>\n                    <button className='btn pink lighten-3 z-depth-1'>Zaloguj</button>\n                    <div className='red-text center'>\n                        { authError ? <p>Zly login i/lub haslo!</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nexport class SignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        passwordRe: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const {\n            firstName,\n            lastName,\n            email,\n            password,\n            passwordRe, } = this.state;\n\n        const isValid = firstName === '' || lastName === '' || email === '' || password !== passwordRe;\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='green-text darken-2'>Rejestracja</h5>\n                    <div className='input-field'>\n                        <label htmlFor='firstName'>Imie</label>\n                        <input type='text' id='firstName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastName'>Nazwisko</label>\n                        <input type='text' id='lastName' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange} />  \n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='password'>Haslo</label>\n                    <input type='password' id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className='input-field'>\n                    <label htmlFor='passwordRe'>Powtorz haslo</label>\n                    <input type='password' id='passwordRe' onChange={this.handleChange} />\n                    </div>\n                    <button disabled={isValid} className='btn pink lighten-3 z-depth-1'>Zarejestruj</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError       //on auth reducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createMeme } from '../../store/actions/memeActions';\nimport { Redirect } from 'react-router-dom'\nimport M from 'materialize-css';\nimport { Chip, TextInput, Icon, Select, Col, Preloader } from 'react-materialize'\nimport '../../index.css';\nimport $ from 'jquery'\nimport { getFirebase } from 'react-redux-firebase';\nimport 'firebase/storage';\n\nexport class CreateMeme extends Component {\n    state = {\n        title: '',\n        meme: '',\n        type: '',\n        hashTag: [],\n        memeStatus: 0\n    }\n\n    handleChange = (e) => {\n        if(e.target.type === 'file') {\n            let firebase = getFirebase();\n            const storageRef = firebase.storage().ref();\n            const meme = e.target.value;\n            const memeRef = storageRef.child(meme);\n            const file = e.target.files[0];\n            this.setState({\n                memeStatus: 1\n            }, () => {\n                memeRef.put(file).then((snapshot) => {\n                    memeRef.getDownloadURL().then((url) => {\n                        this.setState({\n                            meme: url,\n                            memeStatus: 2\n                        })\n                    })\n                }).catch((error) => {\n                    this.setState({ memeStatus: 3 });\n                });\n\n            });\n        } else {\n            this.setState({\n                [e.target.id]: e.target.value\n            }, () => {\n                console.log(this.state);\n            })\n        }\n    }\n\n    handleChip = (e) => {\n        let chips = M.Chips.getInstance($('.chips')).chipsData;  //getting data from chip elemenet           \n        this.setState({\n            hashTag: chips\n        })\n    } \n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createMeme(this.state);\n         this.props.history.push('/');  //redirect user to '/' page   \n    }\n    \n\n    \n   render() {\n\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/zaloguj' />\n\n        const LoadingStatus = () => {\n            if(this.state.memeStatus === 1) {\n                           return <Col s={4}>\n                           <Preloader\n                             active\n                             color=\"blue\"\n                             flashing={false}\n                             size=\"small\"\n                           />\n                         </Col>   \n            } else if(this.state.memeStatus === 2) {\n                return <p className='green-text'>Grafika zaladowana!</p>\n            } else if(this.state.memeStatus === 3) {\n                return <p className='red-text'>Grafika nie została załadowana, spróbuj ponownie.</p>\n            }\n            return false\n        }\n        \n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='blueGrey'>\n                    <div className='input-field'>\n                        <TextInput placeholder='Tytuł wrzutki' id='title' onChange={this.handleChange} className='nBlueText' />\n                    </div>\n                    <Select\n                        onChange={this.handleChange}\n                        value={this.state.type}\n                        id='type'\n                        options={{\n                            classes: '',\n                            dropdownOptions: {\n                            alignment: 'left',\n                            autoTrigger: true,\n                            closeOnClick: true,\n                            constrainWidth: true,\n                            container: null,\n                            coverTrigger: true,\n                            hover: false,\n                            inDuration: 150,\n                            onCloseEnd: null,\n                            onCloseStart: null,\n                            onOpenEnd: null,\n                            onOpenStart: null,\n                            outDuration: 250\n                            }\n                        }}\n                        className='nBlueText'\n                        >\n                        <option disabled value=\"\">Typ wrzutki</option>\n                        <option value='Humor'>Humor</option>\n                        <option value='Ciekawostka'>Ciekawostka</option>\n                        <option value='Historia'>Historyczne</option>\n                    </Select>\n\n                    <div className='input-field'>\n                    <Chip\n                        close={false}\n                        closeIcon={<Icon className=\"close\">close</Icon>}\n                        id='hashTag'\n                        options={{\n                            placeholder: 'Tag > enter',\n                            secondaryPlaceholder: '(max. 8)',\n                            limit: 8,\n                            onChipAdd: this.handleChip,\n                            onChipDelete: this.handleChip,\n                            data: this.state.hashTag\n                        }} \n                        className='nBlueText'/>\n                    </div>\n                    \n                    <div className='input-field'>\n                        <TextInput type='file' label='Zapodaj mema' id='meme' onChange={this.handleChange} ref={this.setRef} />   {/* setting up reference to this place */}\n                        <LoadingStatus />\n                    </div>\n                    <button className='btn pink z-depth-1'>Dodaj</button>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth   //comment in dashboard.js\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMeme: (meme) => dispatch(createMeme(meme))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMeme);","import React from 'react'\n\nconst Test = () => {\n    return(\n        <div>\n            <form>\n                <input type='text' placeholder='zapodaj cos smiesznego' />\n                <input type='email' placeholder='e.g. smiesznyEmail@gmail.com' />\n                <button type='submit'>Dawaj kurwe</button>\n                <button type='reset'>Reset kurwe</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Test","import React from 'react';\nimport './style/App.css';\nimport './style/App.scss';\nimport NavBar from './components/layout/NavBar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport MemeDetails from './components/meme/MemeDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateMeme from './components/meme/CreateMeme';\nimport Test from './components/Test.js'\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar /> \n        <Switch >\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/meme/:id' component={MemeDetails} /> \n          <Route path='/zaloguj' component={SignIn} />\n          <Route path='/rejestracja' component={SignUp} />\n          <Route path='/dodaj' component={CreateMeme} />\n          <Route path='/test' component={Test} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = { \n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error') \n            return {\n                ...state,\n                authError: 'Zly login i/lub haslo!'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.error.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = { \n}\n\nconst memeReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_MEME':\n            console.log('created meme', action.meme);\n            return state;\n        case 'CREATE_MEME_ERROR':\n            console.log('create meme error: ', action.error);\n            return state;\n        case 'LIKED':\n            console.log('like added: ', action);\n            return state;\n        case 'UNLIKED':\n            console.log('unliked: ', action);\n            return state; \n        case 'LIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'UNLIKE_ERROR':\n            console.log('like error: ', action.error);\n            return state;\n        case 'DISLIKED':\n            console.log('dislike added: ', action);\n            return state;\n        case 'UNDISLIKED':\n            console.log('undisliked: ', action);\n            return state; \n        case 'DISLIKE_ERROR':\n            console.log('dislike error: ', action.error);\n            return state;\n        case 'UNDISLIKE_ERROR':\n                console.log('undislike error: ', action.error);\n            return state;\n        case 'CREATE_LIKE_DISLIKE_ERROR':\n            console.log('error during creation empty like and dislike', action.error);\n            return state;\n        default:\n           return state;\n\n    }\n}\n\nexport default memeReducer;\n\n","const initState = {\n    isLoading: false,\n    error: false\n}\nconst commentReducer = (state = initState, action) => {\n    switch(action.type) {\n            case 'COMMENT_ADDED':\n                console.log('comment added', action.comment);\n                return state;\n            case 'COMMENT_ERROR':\n                console.log('comment error: ', action.error);\n                return state;\n        default: return state;\n    }\n}\n\nexport default commentReducer;","import authReducer from './authReducer';\nimport memeReducer from './memeReducer';\nimport commentReducer from './commentReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    meme: memeReducer,\n    comment: commentReducer,\n    firestore: firestoreReducer, // (2) sinking data from firebase to 'firestore' !!#\n    firebase: firebaseReducer\n}); \n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';  \n\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase,  isLoaded} from 'react-redux-firebase'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst fbConfig = {\n    apiKey: \"AIzaSyBstaYLJHJL11SjnDlX3kdrGDPRU7-lBSU\",\n    authDomain: \"toladnie-86b03.firebaseapp.com\",\n    databaseURL: \"https://toladnie-86b03.firebaseio.com\",\n    projectId: \"toladnie-86b03\",\n    storageBucket: \"toladnie-86b03.appspot.com\",\n    messagingSenderId: \"880801740650\",\n    appId: \"1:880801740650:web:99f835b8a87bd60a409713\",\n    measurementId: \"G-7F9NCQNM71\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(fbConfig);\n  firebase.firestore();\n\n  const store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase),\n));\n\nconst rrfConfig = {\n  userProfile: 'users',        // 2. exact name of collection\n  useFirestoreForProfile: true // 1. connect with firestore for info about user\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n  }\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className='screen valign-wrapper'>\n                                <div className=\"loading progress valign-wrapper\">\n                                  <div className=\"indeterminate\"></div>\n                                </div>\n                              </div>;\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root'));\n"],"sourceRoot":""}